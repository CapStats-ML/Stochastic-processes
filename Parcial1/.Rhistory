# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
# Definir la matriz
P<- matrix(c(0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 1,
0, 0, 0, 0, 1, 0,
1/3, 1/3, 1/3, 0, 0, 0,
1, 0, 0, 0, 0, 0,
0, 1/2, 0, 0, 0, 1/2), nrow = 6, byrow = TRUE)
# Creamos la matriz de transicion
mc = new("markovchain",transitionMatrix=P,states=c("0","1","2","3","4","5"),
name="Cadena 1")
colorvector <- c("#2e2d6e", "#2e2d6e", "#2e2d6e", "#2e2d6e", "#2e2d6e", "#2e2d6e")
.plotDiagrammeR(mc, colorvector, color ="#ffbf00" , label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", color=\"", bordercolors[i], "\", fontcolor=\"", labelcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
fillcolors <- c("#ffbf00","#ffbf00","#ffbf00","#ffbf00","#ffbf00","#ffbf00")
bordercolors <- c("#2e2d6e","#2e2d6e","#2e2d6e","#2e2d6e","#2e2d6e","#2e2d6e")
labelcolors <- c("white", "white", "white", "white", "white", "white")
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", color=\"", bordercolors[i], "\", fontcolor=\"", labelcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
# Definir la matriz
P<- matrix(c(0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 1,
0, 0, 0, 0, 1, 0,
1/3, 1/3, 1/3, 0, 0, 0,
1, 0, 0, 0, 0, 0,
0, 1/2, 0, 0, 0, 1/2), nrow = 6, byrow = TRUE)
# Creamos la matriz de transicion
mc = new("markovchain",transitionMatrix=P,states=c("0","1","2","3","4","5"),
name="Cadena 1")
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", color=\"", bordercolors[i], "\", fontcolor=\"", labelcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "]; ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=filled, fillcolor=", fillcolors[i], ", color=", bordercolors[i], ", fontcolor=", labelcolors[i], "]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", color=\"", bordercolors[i], "\", fontcolor=\"", labelcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, bordercolors, labelcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", color=\"", bordercolors[i], "\", fontcolor=\"", labelcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, labelcolor, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\", fontcolor=\"", labelcolor, "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
labelcolors <- "white"
.plotDiagrammeR(mc, fillcolors, bordercolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR(mc, fillcolors, labelcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR(mc, fillcolors, label ="Weather transition matrix", labelloc = "t")
.plotDiagrammeR <- function(object, fillcolors, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "[style=\"filled\", fillcolor=\"", fillcolors[i], "\"]; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, fillcolors, label ="Weather transition matrix", labelloc = "t")
plot(mc)
# plot a diagram using DiagrammeR for a markovchain object
.plotDiagrammeR <- function(object, ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], "; ")
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
if (mat[i,j] != 0) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
# print(args)
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, label = "Matrix de transición", labelloc = "t")
# plot a diagram using DiagrammeR for a markovchain object
.plotDiagrammeR <- function(object, node_fill_color = "lightblue", ...) {
if(is(object,"markovchain")){
mat <- object@transitionMatrix
} else if(is(object,"ctmc")){
mat <- object@generator
}
names <- rownames(mat)
# names of nodes
nodes <- ''
for(i in 1:nrow(mat)) {
nodes <- paste0(nodes, names[i], ' [fillcolor = "', node_fill_color, '"]; ')
}
# store edges
edges <- ''
for(i in 1:nrow(mat)) {
for(j in 1:ncol(mat)) {
if (mat[i,j] != 0) {
edges <- paste0(edges, names[i], "->", names[j], " [label = ", mat[i,j], "] ")
}
}
}
# extract extra parameter
dots <- list(...)
args <- ""
for(name in names(dots)) {
args <- paste0(args, name, "=\"", dots[[name]], "\" ")
}
# print(args)
if (requireNamespace("DiagrammeR", quietly = TRUE)) {
res <- DiagrammeR::grViz(paste0("
digraph circles {
graph [overlap = true, fontsize = 10]
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
", nodes, "
", edges, args,"
// labelfontsize = 20 labelloc='t' label ='Weather transition matrix'
}
"))
return (res)
} else {
print("Diagrammer unavailable")
}
}
.plotDiagrammeR(mc, node_fill_color = "#ffbf00", label = "Matrix de transición", labelloc = "t")
lightblue
.plotDiagrammeR(mc, node_fill_color = "lightblue", label = "Matrix de transición", labelloc = "t")
#Visualizacion de la cadena
set.seed(2
)
#Visualizacion de la cadena
set.seed(2)
.plotDiagrammeR(mc, node_fill_color = "lightblue", label = "Matrix de transición", labelloc = "t")
\documentclass[11pt]{article}
library(tinytex)
